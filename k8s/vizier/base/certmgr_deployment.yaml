---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vizier-certmgr
spec:
  replicas: 1
  selector:
    matchLabels:
      name: vizier-certmgr
  template:
    metadata:
      labels:
        name: vizier-certmgr
        plane: control
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: Exists
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: Exists
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      serviceAccountName: certmgr-service-account
      initContainers:
      - name: nats-wait
        image: songyc31/curl:1.0
        # yamllint disable
        command: ['sh', '-c', 'set -xe;
          URL="${PROTOCOL}://${SERVICE_NAME}:${SERVICE_PORT}${HEALTH_PATH}";
          until [ $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do
            echo "waiting for ${URL}";
            sleep 2;
          done;']
        env:
        - name: SERVICE_NAME
          value: "pl-nats-mgmt"
        - name: SERVICE_PORT
          value: "8222"
        - name: HEALTH_PATH
          value: ""
        - name: PROTOCOL
          value: "http"
      containers:
      - name: app
        image: gcr.io/pixie-oss/pixie-dev/vizier/certmgr_server_image:latest
        env:
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        - name: PL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: pl-tls-config
        ports:
        - containerPort: 50900
        volumeMounts:
        - mountPath: /certs
          name: certs
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 50900
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
